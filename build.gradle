buildscript {
    repositories {
        maven { 
            // url = 'https://maven.cleanroommc.com'
            url = 'https://maven.minecraftforge.net'
        }
        maven { 
            url = 'https://repo.spongepowered.org/maven' 
        }
	mavenCentral()
    }
    dependencies {
        classpath 'com.anatawa12.forge:ForgeGradle:2.3-1.0.7'
        if (project.use_mixins.toBoolean()) {
            classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        }
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

if (project.use_mixins.toBoolean()) {
    apply plugin: 'org.spongepowered.mixin'
}

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

sourceCompatibility = targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'
    mappings = 'stable_39'
    def args = []
    if (project.use_coremod.toBoolean()) {
        args << '-Dfml.coreMods.load=' + coremod_plugin_class_name
    }
    if (project.use_mixins.toBoolean()) {
        args << '-Dmixin.hotSwap=true'
        args << '-Dmixin.checks.interfaces=true'
        args << '-Dmixin.debug.export=true'
    }
    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)
    useDepAts = true
}

repositories {
    maven { 
        url = 'https://maven.cleanroommc.com' 
    }
    maven {
        url = 'https://repo.spongepowered.org/maven'
    }
    maven {
        url 'https://cursemaven.com'
    }
    maven {
        url 'https://maven.blamejared.com/'
    }
    maven {
        url 'https://friendlyhj.github.io/maven'
    }
    maven {
        name = 'jei'
        url = 'http://dvs1.progwml6.com/files/maven'
    }
}

dependencies {

    if (project.use_assetmover.toBoolean()) {
        compile 'com.cleanroommc:assetmover:2.0'
    }
    if (project.use_mixins.toBoolean()) {
        compile 'zone.rong:mixinbooter:7.0'
    }
    deobfCompile ('CraftTweaker2:CraftTweaker2-MC1120-Mod-JEI:1.12-4.+') {
        exclude group: 'deobf.mezz.jei'
    }
    deobfCompile 'youyihj:zenutils:1.13.4'
    deobfCompile 'curse.maven:RedstoneFlux-270789:2920436'
//    deobfCompile 'curse.maven:had-enough-items-557549:4451828'
    deobfCompile 'mezz.jei:jei_1.12.2:4.16.1.302'
}

sourceSets {

    main {
        ext.refMap = 'mixins.' + archives_base_name + '.refmap.json'
    }

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    if (project.use_access_transformer.toBoolean()) {
        rename '(.+_at.cfg)', 'META-INF/$1' // Access Transformers
    }
}

jar {
    manifest {
        def attribute_map = [:]
        if (project.use_coremod.toBoolean()) {
            attribute_map['FMLCorePlugin'] = project.coremod_plugin_class_name
            if (project.include_mod.toBoolean()) {
                attribute_map['FMLCorePluginContainsFMLMod'] = true
                attribute_map['ForceLoadAsMod'] = project.gradle.startParameter.taskNames[0] == "build"
            }
        }
		if (project.use_access_transformer.toBoolean()) {
            attribute_map['FMLAT'] = project.archives_base_name + '_at.cfg'
        }
        attributes(attribute_map)
    }
}
